<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!--  URL 패턴에 따른 설정 파일인 webapp/WEB-INF/spring/appServlet 
    디렉토리의 servlet-context.xml 파일에 추가 – Controller가 처리하지 못하는 요청은
    WAS가 처리하도록 하고 파일 업로드를 위한 설정을 추가-->


	<!-- Controller가 처리하지 못하는 요청을 WAS가 처리하도록 해주는 설정 -->
	<default-servlet-handler />

	<!-- 파일 업로드 처리를 위한 bean -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
	<beans:property name="maxUploadSize" value="10000000"/>
	</beans:bean>

	<!-- Spring MVC Project에서 사용하는 50여 가지의 어노테이션을 사용할 수 있도록 해주는 설정 -->
	<annotation-driven />

	<!-- 변화가 거의 없는 파일들을 저장해 두면 캐싱을 해서 이용할 수 있도록 해주는 설정 기본은 root(webapp, WebContent) 
		디렉토리의 resources 캐싱 시간을 설정하는 것도 가능 -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Controller에서 forwarding 하는 view 이름을 넘겨주었을 때 실제 사용할 View를 결정짓는 설정 
	Controller에서 jsp로 포워딩 하고자 할때 사용하는 뷰 리졸버 : 존재하는 코드라서 order만 추가 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />

		<!-- jsp를 제외한 출력을 위한 설정: 없으니까 추가 -->
		<beans:property name="order" value="0"/>
	</beans:bean>

	<!-- bean을 자동 생성해주는 root 패키지 설정 클래스를 만들 때는 이 패키지 안에 만드는 것을 권장 다른 패키지에 만들었다면 
		다른 패키지도 추가해주면 됩니다. -->
	<context:component-scan
		base-package="naver.dkxkgh98.smartorder" />



</beans:beans>
